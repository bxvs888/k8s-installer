- include_vars: rhel.yml
  when: ansible_distribution in ["RedHat", "CentOS"]

- include_vars: ubuntu.yml
  when: ansible_distribution in ["Ubuntu"]

- name: Clear /opt/kubernetes-offline dir
  file:
    path: /opt/kubernetes-offline
    state: absent

- name: Create /opt/kubernetes-offline dir
  file:
    path: /opt/kubernetes-offline
    state: directory

- name: Transfer k8s-offline-repo
  unarchive:
    src: ./offline-files/{{ item }}
    dest: /opt/kubernetes-offline/
  with_items:
    - "{{ k8s_offline_repo_tarball }}"
    - k8s-images.tar.gz

- name: Transfer calico.yml
  copy:
    src: ./offline-files/calico.yaml
    dest: /opt/kubernetes-offline

- when: ansible_distribution in ["RedHat", "CentOS"]
  block:
    - name: Install offline yum repo
      copy:
        src: kubernetes-offline.repo
        dest: /etc/yum.repos.d/

    # install yum-plugin-versionlock (dirty hack...)
    - name: Install yum-plugin-versionlock
      shell: rpm -Uvh /opt/kubernetes-offline/rpms/yum-plugin-versionlock-*.rpm || exit 0

- when: ansible_distribution in ["Ubuntu"]
  block:
    - name: Install apt offline config
      copy:
        src: 99offline
        dest: /etc/apt/apt.conf.d/

    - name: Backup sources.list
      shell:
        cmd: if [ -e sources.list -a ! -e sources.list.backup ]; then /bin/mv sources.list sources.list.backup; fi
        chdir: /etc/apt/

    - name: Delete sources.list
      file:
        path: /etc/apt/sources.list
        state: absent

    - name: Install offline apt repo
      apt_repository:
        repo: deb [trusted=yes] file:/opt/kubernetes-offline/debs/ ./
        filename: kubernetes-offline
        state: present
        update_cache: yes
