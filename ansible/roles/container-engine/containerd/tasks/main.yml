- name: Install runc (yum)
  yum:
    name: runc
    state: latest
    enablerepo: "{{ yum_enablerepo }}"
    disablerepo: "{{ yum_disablerepo }}"
  when: ansible_os_family == "RedHat"

- name: Install runc (apt)
  apt:
    name: runc
    state: latest
  when: ansible_os_family == "Debian"

#- name: Install runc (online)
#  get_url:
#    url: "{{ runc_download_url }}"
#    dest: /usr/bin/runc
#    owner: root
#    group: root
#    mode: 0755
#  environment: "{{ proxy_env }}"

- when: not offline_install
  block:
    - name: Download containerd
      get_url:
        url: "{{ containerd_download_url }}"
        dest: /tmp/{{ containerd_tarball }}
      environment: "{{ proxy_env }}"

    - set_fact:
        containerd_tarball_fullpath: /tmp/{{ containerd_tarball }}

- set_fact:
    containerd_tarball_fullpath: /opt/kubernetes-offline/{{ containerd_tarball }}
  when: offline_install

- name: Unarchive containerd
  unarchive:
    src: "{{ containerd_tarball_fullpath }}"
    remote_src: yes
    dest: /usr/bin
    owner: root
    group: root
    mode: 0755
    extra_opts:
      - --strip-components=1

- name: Create /etc/containerd dir
  file:
    path: /etc/containerd
    state: directory

- name: Install containerd config.toml
  copy:
    src: config.toml
    dest: /etc/containerd/config.toml

- name: Install containerd unit file
  copy:
    src: containerd.service
    dest: /etc/systemd/system/containerd.service

- name: Enable containerd service
  systemd:
    name: containerd
    enabled: yes
    state: started
    daemon_reload: yes
