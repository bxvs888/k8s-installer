- name: Create pki/config dir
  file:
    path: /etc/kubernetes/pki/config
    state: directory
    owner: root
    mode: 0755

- name: Create ca config json for cfssl
  template:
    src: ca-config.json.j2
    dest: /etc/kubernetes/pki/config/ca-config.json

- name: Delete csr dir
  file:
    path: /etc/kubernetes/pki/csr
    state: absent

- name: Create CSRs
  command: kubeadm alpha certs renew all --csr-only --csr-dir /etc/kubernetes/pki/csr

- name: Sign certs (ca)
  include_tasks: cert.yml
  vars:
    basename: "{{ item.name }}"
    ca: ca
    profile: "{{ item.profile }}"
  with_items:
    - { name: admin.conf, profile: client }
    - { name: apiserver, profile: server }
    - { name: apiserver-kubelet-client, profile: client }
    - { name: controller-manager.conf, profile: client }
    - { name: scheduler.conf, profile: client }

- name: Sign certs (etcd/ca)
  include_tasks: cert.yml
  vars:
    basename: "{{ item.name }}"
    ca: etcd/ca
    profile: "{{ item.profile }}"
  with_items:
    - { name: apiserver-etcd-client, profile: client }
    - { name: etcd-healthcheck-client, profile: client }
    - { name: etcd-peer, profile: server-client }
    - { name: etcd-server, profile: server-client }

- name: Sign certs (front-proxy)
  include_tasks: cert.yml
  vars:
    basename: front-proxy-client
    ca: front-proxy-ca
    profile: client

- name: Copy certs/keys
  copy:
    src: /etc/kubernetes/pki/csr/{{ item }}
    dest: /etc/kubernetes/pki/
    remote_src: yes
  with_items:
    - apiserver.crt
    - apiserver.key
    - apiserver-etcd-client.crt
    - apiserver-etcd-client.key
    - apiserver-kubelet-client.crt
    - apiserver-kubelet-client.key
    - front-proxy-client.crt
    - front-proxy-client.key

- name: Copy cert/keys (etcd)
  copy:
    src: /etc/kubernetes/pki/csr/etcd-{{ item }}
    dest: /etc/kubernetes/pki/etcd/{{ item }}
    remote_src: yes
  with_items:
    - healthcheck-client.crt
    - healthcheck-client.key
    - peer.crt
    - peer.key
    - server.crt
    - server.key

- name: Update kubeconfig files
  shell: >-
    kubectl config set-credentials {{ item.user }}
    --client-certificate=/etc/kubernetes/pki/csr/{{ item.file }}.crt
    --client-key=/etc/kubernetes/pki/csr/{{ item.file }}.key
    --embed-certs=true
    --kubeconfig=/etc/kubernetes/{{ item.file }}
  with_items:
    - { file: admin.conf, user: kubernetes-admin }
    - { file: controller-manager.conf, user: "system:kube-controller-manager" }
    - { file: scheduler.conf, user: "system:kube-scheduler" }
